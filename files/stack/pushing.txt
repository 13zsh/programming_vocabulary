
 (function () { var old = $.fn.contents; $.fn.contents = function () { try { return old.apply(this, arguments); } catch (e) { return $([]); } } })() 
 
 
 
 
 
 
 
 Stack Overflow 
 
 
 
 
 Questions 
 
 
 Developer Jobs 
 
 
 Documentation  beta 
 
 
 Tags 
 
 
 Users 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 current community 
 
 
 
 
 
 
 help 
 chat 
 
 
 
        Stack Overflow
     
 
 
 
 
 
 
 
        Meta Stack Overflow
     
 
 
 
 
 
your communities             
 
 
 
 Sign up  or  log in  to customize your list.
                 
 
 
 more stack exchange communities 
 
 company blog 
 
 
 
 
 
 
 
 
 
 
                            Tour
                             
                                Start here for a quick overview of the site
                             
 
 
 
 
                        Help Center
                         
                            Detailed answers to any questions you might have
                         
 
 
 
 
                                Meta
                                 
                                    Discuss the workings and policies of this site
                                 
 
 
 
 
                                About Us
                                 
                                    Learn more about Stack Overflow the company
                                 
 
 
 
 
                                Business
                                 
                                    Learn more about hiring developers or posting ads with us
                                 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 Log In 
 Sign Up 
 
 
 
 
 
        StackExchange.ready(function () { StackExchange.topbar.init(); });
            StackExchange.scrollPadding.setPaddingTop(60, 10);      
 
 
 
 
 Git 
 
 
 
 
   
 
 
 
 
 dashboard 
 all topics 
 
 
 
 
 
 
 
 
 
 Popular 
 
 
 
 
 
 
 
 
 
 
        StackExchange.ready(function () {
            StackExchange.docs.search.init({
                popularTopicsJson: [{"Id":245,"DocTag":"git","Title":"Ignoring Files and Folders","Url":"/documentation/git/245/ignoring-files-and-folders"},{"Id":218,"DocTag":"git","Title":"Getting started with Git","Url":"/documentation/git/218/getting-started-with-git"},{"Id":415,"DocTag":"git","Title":"Branching","Url":"/documentation/git/415/branching"},{"Id":355,"DocTag":"git","Title":"Rebasing","Url":"/documentation/git/355/rebasing"},{"Id":323,"DocTag":"git","Title":"Committing","Url":"/documentation/git/323/committing"}]
            });
        });
     
   
 
 
 
 Topic 
 
 
 
 
 
 
 You must  sign up  or  log in  to make a topic request. 
 
 
 
 
 
 
 
    StackExchange.ready(function () {
        StackExchange.docs.requestTopic.init('git');
    });
   
 
 
 
 
 
 
 Pushing   
            All Versions
         
 
 
 
 topic 
 discuss 
 
 
 
 
 Title 
 
 
 
 Versions 
 
 
                        0.99
                     
 
                        1.0
                     
 
                        1.1
                     
 
                        1.2
                     
 
                        1.3
                     
 
                        1.4
                     
 
                        1.5
                     
 
                        1.5.3
                     
 
                        1.6
                     
 
                        1.6.3
                     
 
                        1.6.5
                     
 
                        1.7
                     
 
                        1.7.10
                     
 
                        1.8
                     
 
                        1.8.3
                     
 
                        1.9
                     
 
                        2.0
                     
 
                        2.1
                     
 
                        2.2
                     
 
                        2.3
                     
 
                        2.4
                     
 
                        2.5
                     
 
                        2.6
                     
 
                        2.7
                     
 
                        2.8
                     
 
                        2.9
                     
 
                        2.10
                     
 
                        2.10.2
                     
 
                        2.11
                     
 
                        2.11.1
                     
 
                        2.12
                     
 
                        2.13
                     
 
 
 
 Introduction 
 
 After changing, staging, and committing code with Git, pushing is required to make your changes available to others and transfers your local changes to the repository server. This topic will cover how to properly push code using Git. 
 
 
 
 
 
 After changing, staging, and committing code with Git, pushing is required to make your changes available to others and transfers your local changes to the repository server. This topic will cover how to properly push code using Git. 
 
 
 
   edit 
 share 
 request improvement 
   edit 
 move 
 delete topic 
 share 
 
 
 
 
 
                var ados = ados || {}; ados.run = ados.run || [];
                ados.run.push(function () { ados_add_placement(22,499571,"adzerk1431203027",4).setZone(29); });
             
 
 
 
 
 This draft deletes the entire topic. 
 
 
 
 
 
 
 
 
                    Examples
                     
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 8 
 
 Push a specific object to a remote branch 
 
 
 
 
 
 8 
 
 
 
 
 
   
 General syntax 
 git push <remotename> <object>:<remotebranchname>
 
 Example 
 git push origin master:wip-yourname
 
 Will push your master branch to the  wip-yourname  branch of origin (most of the time, the repository you cloned from). 
 
 Delete remote branch 
 Deleting the remote branch is the equivalent of pushing an empty object to it. 
 git push <remotename> :<remotebranchname>
 
 Example 
 git push origin :wip-yourname
 
 Will delete the remote branch  wip-yourname 
 Instead of using the colon, you can also use the --delete flag, which is better readable in some cases. 
 Example 
 git push origin --delete wip-yourname
 
 
 Push a single commit 
 If you have a single commit in your branch that you want to push to a remote without pushing anything else, you can use the following 
 git push <remotename> <commit SHA>:<remotebranchname>
 
 Example 
 Assuming a git history like this 
 eeb32bc Commit 1 - already pushed
347d700 Commit 2 - want to push
e539af8 Commit 3 - only local
5d339db Commit 4 - only local
 
 to push only commit  347d700  to remote  master  use the following command 
 git push origin 347d700:master
 
 
 
 
 
 
 
 
 
 edited  Jan 1 at 21:40 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
   
 
 
   edit 
 share 
 discuss 
 request improvement 
   edit 
 move example 
 delete example 
 
 
 
 
 
 
 
 
 
 
 
 
 6 
 
 Push 
 
 
 
 
 
 6 
 
 
 git push
 
 will push your code to your existing upstream. Depending on the push configuration, it will either push code from you current branch (default in Git 2.x) or from all branches (default in Git 1.x). 
 Specify remote repository 
 When working with git, it can be handy to have multiple remote repositories. To specify a remote repository to push to, just append its name to the command. 
 git push origin
 
 
 Specify Branch 
 To push to a specific branch, say  feature_x : 
 git push origin feature_x
 
 
 Set the remote tracking branch 
 Unless the branch you are working on originally comes from a remote repository, simply using  git push  won't work the first time. You must perform the following command to tell git to push the current branch to a specific remote/branch combination 
 git push --set-upstream origin master
 
 Here,  master  is the branch name on the remote  origin . You can use  -u  as a shorthand for  --set-upstream . 
 
 Pushing to a new repository 
 To push to a repository that you haven't made yet, or is empty: 
 
 Create the repository on GitHub (if applicable) 
 Copy the url given to you, in the form  https://github.com/USERNAME/REPO_NAME.git 
 Go to your local repository, and execute  git remote add origin URL 
 
 To verify it was added, run  git remote -v 
 
 
 Run  git push origin master 
 
 Your code should now be on GitHub 
 For more information view  Adding a remote repository 
 
 Explanation 
 Push code means that git will analyze the differences of your local commits and remote and send them to be written on the upstream. When push succeeds, your local repository and remote repository are synchronized and other users can see your commits. 
 For more details on the concepts of "upstream" and "downstream", see  Remarks . 
 
 
 
 
 
 
 
 edited  Feb 10 at 21:34 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                    +2
                     
 
 
   
 
 
   edit 
 share 
 discuss 
 request improvement 
   edit 
 move example 
 delete example 
 
 
 
   
 
                var ados = ados || {}; ados.run = ados.run || [];
                ados.run.push(function () { ados_add_placement(22,499571,"adzerk2073551857",4).setZone(30); });
             
 
 
   
 
 
 
 
 
 
 
 
 3 
 
 Force Pushing 
 
 
 
 
 
 3 
 
 
 Sometimes, when you have local changes incompatible with remote changes (ie, when you cannot fast-forward the remote branch, or the remote branch is not a direct ancestor of your local branch), the only way to push your changes is a force push. 
 git push -f
 
 or 
 git push --force
 
 
 Important notes 
 This will  overwrite  any remote changes and your remote will match your local. 
 Attention: Using this command may cause the remote repository to  lose commits . Moreover, it is strongly advised against doing a force push if you are sharing this remote repository with others, since their history will retain every overwritten commit, thus rending their work out of sync with the remote repository. 
 As a rule of thumb, only force push when: 
 
 Nobody except you pulled the changes you are trying to overwrite 
 You can force everyone to clone a fresh copy after the forced push and make everyone apply their changes to it (people may hate you for this). 
 
 
 
 
 
 
 
 
 edited  Aug 20 '16 at 18:35 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
   
 
 
   edit 
 share 
 discuss 
 request improvement 
   edit 
 move example 
 delete example 
 
 
 
 
 
 
 
 
 
 
 
 
 1 
 
 Push tags 
 
 
 
 
 
 1 
 
 
 git push --tags
 
 Pushes all of the  git tags  in the local repository that are not in the remote one. 
 
 
 
 
 
 
 
 created  Jul 27 '16 at 1:06 
 
 
 
 
 
 
 
 
   
 
 
   edit 
 share 
 discuss 
 request improvement 
   edit 
 move example 
 delete example 
 
 
 
 
 
 
 
 
 
 
 
 
 0 
 
 Changing the default push behavior 
 
 
 
 
 
 0 
 
 
 Current  updates the branch on the remote repository that shares a name with the current working branch. 
 git config push.default current
 
 Simple  pushes to the upstream branch, but will not work if the upstream branch is called something else. 
 git config push.default simple
 
 Upstream  pushes to the upstream branch, no matter what it is called. 
 git config push.default upstream
 
 Matching  pushes all branches that match on the local and the remote
git config push.default upstream 
 After you've set the preferred style, use 
 git push 
 
 to update the remote repository. 
 
 
 
 
 
 
 
 created  Jul 27 '16 at 1:05 
 
 
 
 
 
 
 
 
   
 
 
   edit 
 share 
 discuss 
 request improvement 
   edit 
 move example 
 delete example 
 
 
 
 
 
 
 + 
            Add Example
         
 
 
 
        Please consider making a request to improve this example.
         Request Improvement 
 
 
 
 
 
 Syntax 
 
 git push [-f | --force] [-v | --verbose] [<remote> [<refspec>...]] 
 
 
 
 
   edit 
 share 
 
   edit 
 
 
 
 
 
 
 Parameters 
 Parameter Details --force Overwrites the remote ref to match your local ref.  Can cause the remote repository to lose commits, so use with care . --verbose Run verbosely. <remote> The remote repository that is destination of the push operation. <refspec>... Specify what remote ref to update with what local ref or object. 
 
 
 
   edit 
 share 
 
   edit 
 
 
 
 
 
 
 Remarks 
 
 Upstream & Downstream 
 
 In terms of source control, you're  "downstream"  when you copy (clone,
checkout, etc) from a repository. Information flowed "downstream" to
you. 
 When you make changes, you usually want to send them back  "upstream" 
so they make it into that repository so that everyone pulling from the
same source is working with all the same changes. This is mostly a
social issue of how everyone can coordinate their work rather than a
technical requirement of source control. You want to get your changes
into the main project so you're not tracking divergent lines of
development. 
 Sometimes you'll read about package or release managers (the people,
not the tool) talking about submitting changes to "upstream". That
usually means they had to adjust the original sources so they could
create a package for their system. They don't want to keep making
those changes, so if they send them "upstream" to the original source,
they shouldn't have to deal with the same issue in the next release. 
 
 ( Source ) 
 
 
 
   edit 
 share 
 
   edit 
 
 
 
 
 
 
 edited  Feb 10 at 21:34 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                    +6
                     
 
 
   
 
 Still have a question about Pushing? 
 Ask Question 
 
 
 
 
 Topic Outline 
 
 Introduction 
 
 
 5 Examples 
 
 
 
 
 Push a specific object to a remote branch 
 
 
 Push 
 
 
 Force Pushing 
 
 
 Push tags 
 
 
 Changing the default push behavior 
 
 Show more 
 
 Syntax 
 Parameters 
 
 Remarks 
 
 
 Upstream &amp; Downstream 
 
 
 
 
 
 
                    Blog
                 
 
 
 
 
   
 
 
 Trends in Government Software Developers 
 
 
 
 
 
 
   
 
 
 Introducing Channels: Private Q&A for Your Team 
 
 
 
 
   
 
                var ados = ados || {}; ados.run = ados.run || [];
                ados.run.push(function () { ados_add_placement(22,499571,"adzerk1455243849",5).setZone(56016); });
             
 
 
 
 
        StackExchange.ready(function () { $.get('/documentation/git/ivc/2600-636356033386612174:jbi3o0bkwmntj7mg-hjvu87rbsg.gif?topicId=2600'); });
     
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                    Topic Outline
                         
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 Save Draft 
 Discard 
 
 
 
 
 Sign up or log in 
 Save edit as a guest 
 Join Stack Overflow 
 
 
 
 Using Google 
 
 
 Using Facebook 
 
 
 Using Email and Password 
 
 
 
 
 Name 
 
 
 
 Email 
 
 Save Draft 
 
 
 
 
 We recognize you from another Stack Exchange Network site! 
 Join and Save Draft 
 
 Discard Draft 
 
 
 
 
 
 
 
 
 
 
 
 
 
 Stack Overflow 
 
 Questions 
 Jobs 
 Developer Jobs Directory 
 Documentation 
 Help 
 Mobile 
 
 
 
 Stack Overflow  Business 
 
 Talent 
 Ads 
 Enterprise 
 Insights 
 
 
 
 Company 
 
 About 
 Press 
 Work Here 
 Legal 
 Privacy Policy 
 Contact Us 
 
 
 
 
 
 Stack Exchange  Network 
 
 Technology 
 Life / Arts 
 Culture / Recreation 
 Science 
 Other 
 
 
 
 
 
 Stack Overflow 
 Server Fault 
 Super User 
 Web Applications 
 Ask Ubuntu 
 Webmasters 
 Game Development 
 
 TeX - LaTeX 
 Software Engineering 
 Unix & Linux 
 Ask Different (Apple) 
 WordPress Development 
 Geographic Information Systems 
 Electrical Engineering 
 
 Android Enthusiasts 
 Information Security 
 Database Administrators 
 Drupal Answers 
 SharePoint 
 User Experience 
 Data Science 
 
 Mathematica 
 Salesforce 
 ExpressionEngine® Answers 
 Blender 
 Network Engineering 
 Cryptography 
 Code Review 
 
 Magento 
 Software Recommendations 
 Signal Processing 
 Emacs 
 Raspberry Pi 
 Programming Puzzles & Code Golf 
 Ethereum 
 
 
 
                            more (27)
                         
 
 
 
 
 
 
 Photography 
 Science Fiction & Fantasy 
 Graphic Design 
 Movies & TV 
 Music: Practice & Theory 
 Worldbuilding 
 Seasoned Advice (cooking) 
 
 Home Improvement 
 Personal Finance & Money 
 Academia 
 Law 
 
 
 
                            more (16)
                         
 
 
 
 
 
 
 English Language & Usage 
 Skeptics 
 Mi Yodeya (Judaism) 
 Travel 
 Christianity 
 English Language Learners 
 Japanese Language 
 
 Arqade (gaming) 
 Bicycles 
 Role-playing Games 
 Anime & Manga 
 Puzzling 
 Motor Vehicle Maintenance & Repair 
 
 
 
                            more (32)
                         
 
 
 
 
 
 
 MathOverflow 
 Mathematics 
 Cross Validated (stats) 
 Theoretical Computer Science 
 Physics 
 Chemistry 
 Biology 
 
 Computer Science 
 Philosophy 
 
 
 
                            more (10)
                         
 
 
 
 
 
 
 Meta Stack Exchange 
 Stack Apps 
 API 
 Data 
 Area 51 
 
 
 
 
 
 Blog 
 Facebook 
 Twitter 
 LinkedIn 
 
 
 
                                    site design / logo © 2017 Stack Exchange Inc; user contributions licensed under  cc by-sa 3.0 
                                    with  attribution required .
                                     rev 2017.7.13.1278 
 
 
 
 
 
 
 
 
 Stack Overflow works best with JavaScript enabled
             
 
 
 var z=document.createElement("script");z.type="text/javascript",z.async=!0,z.src="https://static.adzerk.net/ados.js";var s=document.getElementsByTagName("script")[0];s.parentNode.insertBefore(z,s); 
 
var ados = ados || {};
ados.run = ados.run || [];

 
 
            (function(i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function() { (i[r].q = i[r].q || []).push(arguments) }, i[r].l = 1 * new Date(); a = s.createElement(o),
                m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m);
            })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');
                ga('create', 'UA-5620270-1');
                ga('create', 'UA-5620270-60', {name: 'pageData', sampleRate: 100 });
                ga('send', 'pageview');
                ga('pageData.send', 'pageview');
        var _qevents = _qevents || [],
            _comscore = _comscore || [];
        (function () {
            var ssl='https:'==document.location.protocol,
                s=document.getElementsByTagName('script')[0],
                qc=document.createElement('script');
                qc.async = true;
                qc.src = (ssl ? 'https://secure' : 'http://edge') + '.quantserve.com/quant.js';
                s.parentNode.insertBefore(qc, s);
                _qevents.push({ qacct: "p-c1rF4kxgLUzNc" });
                            var sc=document.createElement('script');
                sc.async=true;
                sc.src=(ssl?'https://sb':'http://b') + '.scorecardresearch.com/beacon.js';
                s.parentNode.insertBefore(sc, s);
                _comscore.push({ c1: "2", c2: "17440561" });
        })();

     
 
                
                (function(appendChild) {
                    Node.prototype.appendChild = function() {
                        var parent = this;
                        var newNode = arguments[0];
                        if (parent.nodeName === 'HEAD'
                            && newNode
                            && newNode.nodeName === 'SCRIPT'
                            && newNode.src) {
                            
                            window.setTimeout(function() {
                                var result = newNode.src.match(/^https:\/\/maps\.googleapis\.com\/maps\/api\/place\/js\/(\w+)Service\./i) || [];
                                var service = result[1];
                                if (service) {
                                    if (service === 'Autocompletion') service =  2;
                                    else if (service === 'Place') service = 1;
                                    else service = 0;
                                    StackExchange.using('gps', function() {
                                        StackExchange.gps.track('google_maps_places_api.call', { service: service });
                                    });
                                }
                            }, 0);
                        }
                        return appendChild.apply(this, arguments);
                    };
                })(Node.prototype.appendChild);
             
