
 (function () { var old = $.fn.contents; $.fn.contents = function () { try { return old.apply(this, arguments); } catch (e) { return $([]); } } })() 
 
 
 
 
 
 
 
 Stack Overflow 
 
 
 
 
 Questions 
 
 
 Developer Jobs 
 
 
 Documentation  beta 
 
 
 Tags 
 
 
 Users 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 current community 
 
 
 
 
 
 
 help 
 chat 
 
 
 
        Stack Overflow
     
 
 
 
 
 
 
 
        Meta Stack Overflow
     
 
 
 
 
 
your communities             
 
 
 
 Sign up  or  log in  to customize your list.
                 
 
 
 more stack exchange communities 
 
 company blog 
 
 
 
 
 
 
 
 
 
 
                            Tour
                             
                                Start here for a quick overview of the site
                             
 
 
 
 
                        Help Center
                         
                            Detailed answers to any questions you might have
                         
 
 
 
 
                                Meta
                                 
                                    Discuss the workings and policies of this site
                                 
 
 
 
 
                                About Us
                                 
                                    Learn more about Stack Overflow the company
                                 
 
 
 
 
                                Business
                                 
                                    Learn more about hiring developers or posting ads with us
                                 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 Log In 
 Sign Up 
 
 
 
 
 
        StackExchange.ready(function () { StackExchange.topbar.init(); });
            StackExchange.scrollPadding.setPaddingTop(60, 10);      
 
 
 
 
 Django 
 
 
 
 
   
 
 
 
 
 dashboard 
 all topics 
 
 
 
 
 
 
 
 
 
 Popular 
 
 
 
 
 
 
 
 
 
 
        StackExchange.ready(function () {
            StackExchange.docs.search.init({
                popularTopicsJson: [{"Id":200,"DocTag":"django","Title":"Getting started with Django","Url":"/documentation/django/200/getting-started-with-django"},{"Id":942,"DocTag":"django","Title":"Settings","Url":"/documentation/django/942/settings"},{"Id":888,"DocTag":"django","Title":"Models","Url":"/documentation/django/888/models"},{"Id":1235,"DocTag":"django","Title":"Querysets","Url":"/documentation/django/1235/querysets"},{"Id":1721,"DocTag":"django","Title":"Middleware","Url":"/documentation/django/1721/middleware"}]
            });
        });
     
   
 
 
 
 Topic 
 
 
 
 
 
 
 You must  sign up  or  log in  to make a topic request. 
 
 
 
 
 
 
 
    StackExchange.ready(function () {
        StackExchange.docs.requestTopic.init('django');
    });
   
 
 
 
 
 
 
 Migrations   
            All Versions
         
 
 
 
 topic 
 discuss 
 
 
 
 
 Title 
 
 
 
 Versions 
 
 
                        1.0
                     
 
                        1.1
                     
 
                        1.2
                     
 
                        1.3
                     
 
                        1.4
                     
 
                        1.5
                     
 
                        1.6
                     
 
                        1.7
                     
 
                        1.8
                     
 
                        1.9
                     
 
                        1.10
                     
 
                        1.11
                     
 
 
 
 Introduction 
 
 
 
 
 
 
 
 
 
 
   add introduction 
 edit 
 share 
 request improvement 
   edit 
 move 
 delete topic 
 share 
 
 
 
 
 
 
 
 
 This draft deletes the entire topic. 
 
 
 
 
 
 
 
 
                    Examples
                     
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 3 
 
 Manual migrations 
 
 
 
 
 
 3 
 
 
 
 
 
   
 Sometimes, migrations generated by Django are not sufficient. This is especially true when you want to make  data migrations . 
 For instance, let's you have such model: 
 class Article(models.Model):
    title = models.CharField(max_length=70)
 
 This model already have existing data and now you want to add a  SlugField : 
 class Article(models.Model):
    title = models.CharField(max_length=70)
    slug = models.SlugField(max_length=70)
 
 You created the migrations to add the field, but now you would like to set the slug for all existing article, according to their  title . 
 Of course, you could just do something like this in the terminal: 
 $ django-admin shell
>>> from my_app.models import Article
>>> from django.utils.text import slugify
>>> for article in Article.objects.all():
...     article.slug = slugify(article.title)
...     article.save()
...
>>>
 
 But you will have to do this in all your environments (ie. your office desktop, your laptop, ...), all your coworkers will have to do so as well, and you will have to think about it on staging and when pushing live. 
 To make it once and for all, we will do it in a migration. First create an empty migration: 
 $ django-admin makemigrations --empty app_name
 
 This will create an empty migration file. Open it, it contains an base skeleton. Let's say your previous migration was named  0023_article_slug  and this one is named  0024_auto_20160719_1734 . Here is what we will write in our migration file: 
 # -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-07-19 15:34
from __future__ import unicode_literals

from django.db import migrations
from django.utils.text import slugify


def gen_slug(apps, schema_editor):
    # We can't import the Article model directly as it may be a newer
    # version than this migration expects. We use the historical version.
    Article = apps.get_model('app_name', 'Article')
    for row in Article.objects.all():
        row.slug = slugify(row.name)
        row.save()


class Migration(migrations.Migration):

    dependencies = [
        ('hosting', '0023_article_slug'),
    ]

    operations = [
        migrations.RunPython(gen_slug, reverse_code=migrations.RunPython.noop),
        # We set `reverse_code` to `noop` because we cannot revert the migration
        # to get it back in the previous state.
        # If `reverse_code` is not given, the migration will not be reversible,
        # which is not the behaviour we expect here.
    ]
 
 
 
 
 
 
 
 
 created  Jul 21 '16 at 17:35 
 
 
 
 
 
 
 
 
   
 
 
   edit 
 share 
 discuss 
 request improvement 
   edit 
 move example 
 delete example 
 
 
 
 
 
 
 
 
 
 
 
 
 2 
 
 Fake migrations 
 
 
 
 
 
 2 
 
 
 When a migration is run, Django stores the name of the migration in a django_migrations table. 
 Create and Fake initial migrations for existing schema 
 If your app already has models and database tables, and doesnâ€™t have migrations.
First create initial migrations for you app. 
 python manage.py makemigrations your_app_label
 
 Now fake initial migrations as applied 
 python manage.py migrate --fake-initial
 
 Fake all migrations in all apps 
 python manage.py migrate --fake
 
 Fake single app migrations 
 python manage.py migrate --fake core
 
 Fake single migration file 
 python manage.py migrate myapp migration_name
 
 
 
 
 
 
 
 
 created  Jul 29 '16 at 5:48 
 
 
 
 
 
 
 
 
   
 
 
   edit 
 share 
 discuss 
 request improvement 
   edit 
 move example 
 delete example 
 
 
 
   
 
 
   
 
 
 
 
 
 
 
 
 1 
 
 Working with migrations 
 
 
 
 
 
 1 
 
 
 Django uses migrations to propagate changes you make to your models to your database. Most of the time django can generate them for you. 
 To create a migration, run: 
 $ django-admin makemigrations <app_name>
 
 This will create a migration file in the  migration  submodule of  app_name . The first migration will be named  0001_initial.py , the other will start with  0002_ , then  0003 , ... 
 If you omit  <app_name>  this will create migrations for all your  INSTALLED_APPS . 
 To propagate migrations to your database, run: 
 $ django-admin migrate <app_name>
 
 To show all your migrations, run: 
 $ django-admin showmigrations app_name
app_name
  [X] 0001_initial
  [X] 0002_auto_20160115_1027
  [X] 0003_somemodel
  [ ] 0004_auto_20160323_1826
 
 
 [X]  means that the migration was propagated to your database 
 [ ]  means that the migration was not propagated to your database. Use  django-admin migrate  to propagate it 
 
 You call also revert migrations, this can be done by passing the migration name to the  migrate command . Given the above list of migrations (shown by  django-admin showmigrations ): 
 $ django-admin migrate app_name 0002  # Roll back to migration 0002
$ django-admin showmigrations app_name
app_name
  [X] 0001_initial
  [X] 0002_auto_20160115_1027
  [ ] 0003_somemodel
  [ ] 0004_auto_20160323_1826
 
 
 
 
 
 
 
 
 created  Jul 21 '16 at 17:35 
 
 
 
 
 
 
 
 
   
 
 
   edit 
 share 
 discuss 
 request improvement 
   edit 
 move example 
 delete example 
 
 
 
 
 
 
 
 
 
 
 
 
 0 
 
 Change a CharField to a ForeignKey 
 
 
 
 
 
 0 
 
 
 First off, let's assume this is your initial model, inside an application called  discography : 
 from django.db import models

class Album(models.Model):
    name = models.CharField(max_length=255)
    artist = models.CharField(max_length=255)
 
 Now, you realize that you want to use a ForeignKey for the artist instead. This is a somewhat complex process, which has to be done in several steps. 
 Step 1, add a new field for the ForeignKey, making sure to mark it as null (note that the model we are linking to is also now included): 
 from django.db import models

class Album(models.Model):
    name = models.CharField(max_length=255)
    artist = models.CharField(max_length=255)
    artist_link = models.ForeignKey('Artist', null=True)

class Artist(models.Model):
    name = models.CharField(max_length=255)
 
 ...and create a migration for this change. 
 ./manage.py makemigrations discography
 
 Step 2, populate your new field. In order to do this, you have to create an empty migration. 
 ./manage.py makemigrations --empty --name transfer_artists discography
 
 Once you have this empty migration, you want to add a single  RunPython  operation to it in order to link your records. In this case, it could look something like this: 
 def link_artists(apps, schema_editor):
    Album = apps.get_model('discography', 'Album')
    Artist = apps.get_model('discography', 'Artist')
    for album in Album.objects.all():
        artist, created = Artist.objects.get_or_create(name=album.artist)
        album.artist_link = artist
        album.save()
 
 Now that your data is transferred to the new field, you could actually be done and leave everything as is, using the new  artist_link  field for everything. Or, if you want to do a bit of cleanup, you want to create two more migrations. 
 For your first migration, you will want to delete your original field,  artist . For your second migration, rename the new field  artist_link  to  artist . 
 This is done in multiple steps to ensure that Django recognizes the operations properly. 
 
 
 
 
 
 
 
 created  Oct 11 '16 at 20:30 
 
 
 
 
 
 
 
 
   
 
 
   edit 
 share 
 discuss 
 request improvement 
   edit 
 move example 
 delete example 
 
 
 
 
 
 
 
 
 
 
 
 
 0 
 
 Custom names for migration files 
 
 
 
 
 
 0 
 
 
 Use the  makemigrations --name <your_migration_name>  option to allow naming the migrations(s) instead of using a generated name. 
 python manage.py makemigrations --name <your_migration_name> <app_name>
 
 
 
 
 
 
 
 
 edited  Sep 18 '16 at 11:09 
 
 
 
 
 
 
 
 
 
 
 
 
 
   
 
 
   edit 
 share 
 discuss 
 request improvement 
   edit 
 move example 
 delete example 
 
 
 
 
 
 
 
 
 
 
 
 
 0 
 
 Solving migration conflicts 
 
 
 
 
 
 0 
 
 
 Introduction 
 Sometimes migrations conflict, resulting in making the migration unsuccesful. This can happen in a lot of scenerio's, however it can occur on a regular basis when developing one app with a team. 
 Common migration conflicts happen while using source control, especially when the feature-per-branch method is used. For this scenario we will use a model called  Reporter  with the attributes  name  and  address . 
 Two developers at this point are going to develop a feature, thus they both get this initial copy of the  Reporter  model. Developer A adds an  age  which results in the file  0002_reporter_age.py  file. Developer B adds a  bank_account  field which resulsts in  0002_reporter_bank_account . Once these developers merge their code together and attempt to migrate the migrations, a migration conflict occurred. 
 This conflict occurs because these migrations both alter the same model,  Reporter . On top of that, the new files both start with 0002. 
 Merging migrations 
 There are several ways of doing it. The following is in the recommended order: 
 
 
 The most simple fix for this is by running the makemigrations
command with a --merge flag. 
 python manage.py makemigrations --merge <my_app>
 
 This will create a new migration solving the previous conflict. 
 
 
 When this extra file is not welcome in the development environment
for personal reasons, an option is to delete the conflicting
migrations. Then, a new migration can be made using the regular
 makemigrations  command. When custom migrations are written, such as  migrations.RunPython , need to be accounted for using this method. 
 
 
 
 
 
 
 
 
 
 created  Sep 25 '16 at 3:11 
 
 
 
 
 
 
 
 
   
 
 
   edit 
 share 
 discuss 
 request improvement 
   edit 
 move example 
 delete example 
 
 
 
 
 
 
 + 
            Add Example
         
 
 
 
        Please consider making a request to improve this example.
         Request Improvement 
 
 
 
 
 
 Syntax 
 
 
 Syntax 
 
 
 
   add syntax 
 
 
 
 
 
 
 
 Parameters 
 django-admin  command Details makemigrations <my_app> Generate migrations for  my_app makemigrations Generate migrations for all apps makemigrations --merge Resolve migration conflicts for all apps makemigrations --merge <my_app> Resolve migration conflicts for  my_app makemigrations --name <migration_name> <my_app> Generate a migration for  my_app  with the name  migration_name migrate <my_app> Apply pending migrations of  my_app  to the database migrate Apply all pending migrations to the database migrate <my_app> <migration_name> Apply or unapply up to  migration_name migrate <my_app> zero Unapply all migrations in  my_app sqlmigrate <my_app> <migration_name> Prints the SQL for the named migration showmigrations Shows all migrations for all apps showmigrations <my_app> Shows all migrations in  my_app 
 
 
 
   edit 
 share 
 
   edit 
 
 
 
 
 
 
 Remarks 
 
 
 Remarks 
 
 
 
   add remarks 
 
 
 
 
 
 
 
 edited  Oct 11 '16 at 20:30 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                    +2
                     
 
 
   
 
 Still have a question about Migrations? 
 Ask Question 
 
 
 
 
 Topic Outline 
 
 6 Examples 
 
 
 
 
 Manual migrations 
 
 
 Fake migrations 
 
 
 Working with migrations 
 
 
 Change a CharField to a ForeignKey 
 
 
 Custom names for migration files 
 
 
 Solving migration conflicts 
 
 Show more 
 
 Parameters 
 
 
 
                    Blog
                 
 
 
 
 
   
 
 
 Trends in Government Software Developers 
 
 
 
 
 
 
   
 
 
 Introducing Channels: Private Q&A for Your Team 
 
 
 
 
   
 
 
 
 
        StackExchange.ready(function () { $.get('/documentation/django/ivc/1200-636356028167180443:rmymrq9wc3iflreaso2o8z6lfkq.gif?topicId=1200'); });
     
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                    Topic Outline
                         
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 Save Draft 
 Discard 
 
 
 
 
 Sign up or log in 
 Save edit as a guest 
 Join Stack Overflow 
 
 
 
 Using Google 
 
 
 Using Facebook 
 
 
 Using Email and Password 
 
 
 
 
 Name 
 
 
 
 Email 
 
 Save Draft 
 
 
 
 
 We recognize you from another Stack Exchange Network site! 
 Join and Save Draft 
 
 Discard Draft 
 
 
 
 default 
 
 
 
 
 
 
 
 
 
 Stack Overflow 
 
 Questions 
 Jobs 
 Developer Jobs Directory 
 Documentation 
 Help 
 Mobile 
 
 
 
 Stack Overflow  Business 
 
 Talent 
 Ads 
 Enterprise 
 Insights 
 
 
 
 Company 
 
 About 
 Press 
 Work Here 
 Legal 
 Privacy Policy 
 Contact Us 
 
 
 
 
 
 Stack Exchange  Network 
 
 Technology 
 Life / Arts 
 Culture / Recreation 
 Science 
 Other 
 
 
 
 
 
 Stack Overflow 
 Server Fault 
 Super User 
 Web Applications 
 Ask Ubuntu 
 Webmasters 
 Game Development 
 
 TeX - LaTeX 
 Software Engineering 
 Unix & Linux 
 Ask Different (Apple) 
 WordPress Development 
 Geographic Information Systems 
 Electrical Engineering 
 
 Android Enthusiasts 
 Information Security 
 Database Administrators 
 Drupal Answers 
 SharePoint 
 User Experience 
 Data Science 
 
 Mathematica 
 Salesforce 
 ExpressionEngineÂ® Answers 
 Blender 
 Network Engineering 
 Cryptography 
 Code Review 
 
 Magento 
 Software Recommendations 
 Signal Processing 
 Emacs 
 Raspberry Pi 
 Programming Puzzles & Code Golf 
 Ethereum 
 
 
 
                            more (27)
                         
 
 
 
 
 
 
 Photography 
 Science Fiction & Fantasy 
 Graphic Design 
 Movies & TV 
 Music: Practice & Theory 
 Worldbuilding 
 Seasoned Advice (cooking) 
 
 Home Improvement 
 Personal Finance & Money 
 Academia 
 Law 
 
 
 
                            more (16)
                         
 
 
 
 
 
 
 English Language & Usage 
 Skeptics 
 Mi Yodeya (Judaism) 
 Travel 
 Christianity 
 English Language Learners 
 Japanese Language 
 
 Arqade (gaming) 
 Bicycles 
 Role-playing Games 
 Anime & Manga 
 Puzzling 
 Motor Vehicle Maintenance & Repair 
 
 
 
                            more (32)
                         
 
 
 
 
 
 
 MathOverflow 
 Mathematics 
 Cross Validated (stats) 
 Theoretical Computer Science 
 Physics 
 Chemistry 
 Biology 
 
 Computer Science 
 Philosophy 
 
 
 
                            more (10)
                         
 
 
 
 
 
 
 Meta Stack Exchange 
 Stack Apps 
 API 
 Data 
 Area 51 
 
 
 
 
 
 Blog 
 Facebook 
 Twitter 
 LinkedIn 
 
 
 
                                    site design / logo Â© 2017 Stack Exchange Inc; user contributions licensed under  cc by-sa 3.0 
                                    with  attribution required .
                                     rev 2017.7.13.1278 
 
 
 
 
 
 
 
 
 Stack Overflow works best with JavaScript enabled
             
 
 
 var z=document.createElement("script");z.type="text/javascript",z.async=!0,z.src="https://static.adzerk.net/ados.js";var s=document.getElementsByTagName("script")[0];s.parentNode.insertBefore(z,s); 
 
var ados = ados || {};
ados.run = ados.run || [];

 
 
            (function(i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function() { (i[r].q = i[r].q || []).push(arguments) }, i[r].l = 1 * new Date(); a = s.createElement(o),
                m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m);
            })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');
                ga('create', 'UA-5620270-1');
                ga('create', 'UA-5620270-60', {name: 'pageData', sampleRate: 100 });
                ga('send', 'pageview');
                ga('pageData.send', 'pageview');
        var _qevents = _qevents || [],
            _comscore = _comscore || [];
        (function () {
            var ssl='https:'==document.location.protocol,
                s=document.getElementsByTagName('script')[0],
                qc=document.createElement('script');
                qc.async = true;
                qc.src = (ssl ? 'https://secure' : 'http://edge') + '.quantserve.com/quant.js';
                s.parentNode.insertBefore(qc, s);
                _qevents.push({ qacct: "p-c1rF4kxgLUzNc" });
                            var sc=document.createElement('script');
                sc.async=true;
                sc.src=(ssl?'https://sb':'http://b') + '.scorecardresearch.com/beacon.js';
                s.parentNode.insertBefore(sc, s);
                _comscore.push({ c1: "2", c2: "17440561" });
        })();

     
 
                
                (function(appendChild) {
                    Node.prototype.appendChild = function() {
                        var parent = this;
                        var newNode = arguments[0];
                        if (parent.nodeName === 'HEAD'
                            && newNode
                            && newNode.nodeName === 'SCRIPT'
                            && newNode.src) {
                            
                            window.setTimeout(function() {
                                var result = newNode.src.match(/^https:\/\/maps\.googleapis\.com\/maps\/api\/place\/js\/(\w+)Service\./i) || [];
                                var service = result[1];
                                if (service) {
                                    if (service === 'Autocompletion') service =  2;
                                    else if (service === 'Place') service = 1;
                                    else service = 0;
                                    StackExchange.using('gps', function() {
                                        StackExchange.gps.track('google_maps_places_api.call', { service: service });
                                    });
                                }
                            }, 0);
                        }
                        return appendChild.apply(this, arguments);
                    };
                })(Node.prototype.appendChild);
             
